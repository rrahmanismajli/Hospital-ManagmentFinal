@using Microsoft.AspNetCore.Identity;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject CustomUserManager _custom


@{
    ViewData["Title"] = "Profile";
}
<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{

        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                @{
                    var user = await UserManager.GetUserAsync(User);
                    <img alt="avatar"
                     class="rounded-circle img-fluid" style="width: 30px;" src="@user.ImageUrl" />
                }
               Hello @UserManager.GetUserName(User)!
                    
            </a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
